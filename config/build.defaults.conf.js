// Â© Andrew Wei

/**
 * @file Default configuration for the build task. Override these in the config
 *       file of the target project.
 */

module.exports = {
  // Default locale for i18n.
  defaultLocale: `en`,

  // Input paths, where all source files to be processed by Webpack are located.
  input: {
    // The base path of the input files RELATIVE to the project root (cwd). All 
    // the subseqent paths are RELATIVE to this path.
    baseDir: `app`,
    
    // The path to assets (i.e. fonts, CSS, Javascripts, images, etc.), RELATIVE
    // to the input base path.
    assetsDir: `assets`,

    // The path to manifest files (i.e. favicons, iOS/Android app icons, 
    // manifest.json, etc), RELATIVE to the input base path.
    manifestDir: `manifest`,

    // The path to the entry Javascript files for Webpack. This path is RELATIVE
    // to the input base path. These entry files correspond to every page of 
    // your app. For every page template you create, you should have a matching 
    // entry file with the same file name as the page template. Note that only 
    // the files at the root of this path are taken into account, meaning that 
    // directories are ignored.
    entriesDir: `assets`,

    // The path to all the page templates which will be piped into
    // `html-webpack-plugin` individually. This path is RELATIVE to the input
    // base path. If there exists a Javascript entry file having the same name 
    // as the template, it will be injected into the generated HTML file. Note 
    // that only the files at the root of this path are taken into account, 
    // meaning that directories are ignored.
    viewsDir: `views`,

    // Name of the page to be generated as the root `index.html` file.
    viewIndexFile: `index`
  },

  // Output paths, where files generated by Webpack will be saved to.
  output: {
    // The base path of the output files RELATIVE to the project root (cwd). All
    // the subsequent paths are RELATIVE to this path.
    baseDir: `public`,

    // The path where processed assets should be saved. The files include CSS,
    // Javascripts, fonts, images, media, etc. Basically all processed files
    // except for HTML files, manifest files and files that were in the static
    // directory. This path is RELATIVE to the output base path.
    assetsDir: `assets`,

    // The path where unprocessed static files are copied to. These are the 
    // files that were originally in the static directory (not part of the 
    // inputs). This path is RELATIVE to the output base path.
    staticDir: ``
  },

  // Path to configuration files.
  config: {
    // The base path of the config files, RELATIVE to the project root (cwd).
    // All subsequent paths are RELATIVE to this path.
    baseDir: `config`,

    // The path where all the locale files are stored. This path is RELATIVE to
    // the config base path.
    // @see https://www.npmjs.com/package/i18n
    localesDir: `locales`,

    // The path to app specific config. This file is merely passed to Webpack's
    // `DefinePlugin` as `$config`, so it can be referenced in the source code.
    // This is like optional meta data.
    appConfigFile: `app.conf`
  },

  // Path to static files. These files are outside of the input path and will
  // not be processed by Webpack. Rather, they will be directly copied to the
  // output path.
  static: {
    // The base path of the static files, RELATIVE to the project root (cwd).
    baseDir: `static`,

    // Glob patterns to ignore when copying static files.
    ignore: [`.*`]
  },

  // Config options specific to the `build` task.
  build: {
    // Public path of all loaded assets.
    publicPath: process.env.PUBLIC_PATH || `/`,

    // Specifies whether the linter should run.
    linter: true,

    // Specifies whether assets should be gzipped. You might want to skip this 
    // if your web host already does it.
    gzip: false,

    // The extensions of the files to gzip, if enabled.
    gzipExtensions: [`js`, `css`],

    // Specifies whether a bundle analyzer report should be generated at the end
    // of the build process.
    analyzer: false
  },

  // Config options specific to the `dev` task.
  dev: {
    // Public path of all loaded assets. 
    publicPath: `/`,

    // Specifies whether the linter should run.
    linter: false,

    // Specifies the port of the dev server.
    port: 8080,

    // Specifies whether the browser should automatically open when the dev
    // server is live.
    autoOpenBrowser: true
  }
};